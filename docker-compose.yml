version: '3.7'
services:
  ui:
    build: 
      context: ./client
      dockerfile: Dockerfile
    restart: always
    ports:
      - '3000:3000'
    depends_on:
      - api
  api:
    build: 
      context: .
    restart: always
    ports:
      - '3001:3001'
      - '3002:3002'
    depends_on:
      - mongo
    volumes:
      - .:/home/battl/FoodFeed
      - node_modules:/home/node/app/node_modules
    networks:
      - app-network
    command: ./wait-for.sh mongo:27017 -- /home/node/app/node_modules/.bin/nodemon server.js
  ffmpeg:
    image: adilm7177/ffmpeg
  mongo:
    image: mongo
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - data:/data/db
    networks:
      - app-network
  registry:
    image: registry:2
    ports:
      - 127.0.0.1:5000:5000
    environment:
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data
    volumes:
      - data:/data
  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - api
    networks:
      - app-network
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email vermaadam@gmail.com --agree-tos --no-eff-email --staging -d api.foodfeedllc.com -d www.api.foodfeedllc.com   
networks:
  app-network:
    driver: bridge

volumes:
  data:
  node_modules:  
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/adam/FoodFeed/client/build
      o: bind